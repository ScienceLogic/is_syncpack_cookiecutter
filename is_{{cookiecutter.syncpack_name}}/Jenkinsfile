#!groovy
@Library("composePipeline@1.2.1")__
node('dockerslaves') {
    stage('Test') {
        def imageName = "is_{{cookiecutter.syncpack_name}}"
        pipelineArgs = [PUBLISH: false]
        if (env.BRANCH_NAME == "dev") {
            pipelineArgs = [PUBLISH: true]
        }
        pipelineArgs["composeFile"] = "docker/docker-compose.yml"
        pipelineArgs["dockerFile"] = "docker/Dockerfile"

        compose.defaultLibraryPipeline(imageName,pipelineArgs)
    }
    stage('Versioning and upload wheel') {
            checkout scm
            checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: "master"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'is_build_tools']], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'a47b7eb4-3b28-47b9-abb6-18c561796dfa', url: 'ssh://jbitbuck@code.eng.sciencelogic.com/air/is_build_tools']]]
            def branch_trimmed = sh(script:"basename ${env.BRANCH_NAME}", returnStdout:true).trim()
            version_used = sh(script:"is_build_tools/autoBuild.sh -b ${branch_trimmed} -w", returnStdout:true).trim()
            print "Wheel created from branch ${branch_trimmed} Uploaded as version: ${version_used}"
    }
}